<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>dipiscan</id>
    <version>2.7.4</version>
    <title>Dipiscan (Install)</title>
    <authors>Damien PONNELLE</authors>
    <owners>bibimagic</owners>
    <licenseUrl>http://cecill.info/index.fr.html</licenseUrl>
    <projectUrl>https://www.dipisoft.com/articles.php?pg=2116</projectUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/bibimagic/Damien-PONNELLE-dipiscan/dipiscan32.png</iconUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <summary>Dipiscan is a tool that will allow you to analyze the devices connected to your network.</summary>
	<description>In addition to the usual information (IP address, MAC address, connected user, etc.) that most other similar tools go back, Dipiscan also offers the possibility of configuring the repatriation of complementary information (extracted from the remote registry database or by WMI/SNMP requests). This is done very easily via the tool configuration window.

Have you been a fan of IPScan32? So you're going to love Dipiscan. blinkWhy am I also sure? My answer in a few points:

    its ergonomics, very close to that of IPScan32 so that you're not too disturbed.
    its slightly modernized look,
    its functionalities, enriched by the integration of those of WakeOnLan,
    its operation, which is no longer based on DOS commands (PING, NBTSTAT, ARP, NSLOOKUP), the use of which could be problematic on "localized" versions of Windows (translated into a language other than French or English),
    its parameterization, making it possible to configure the analyses more finely,
    its command line mode (DipiscanBatch.exe), for those who need to automate the scan analysis,
    its use in “portable” mode, therefore the absence of an installer,
    But above all, its speed, because Dipiscan is not an evolution of IPScan32: it is a new tool that is completely redesigned and re-written in a language of modern development. No more perpet VB5, place in C- and multi-threading. Result: when an analysis of a strand used to require between 3 minutes and 5 minutes, or sometimes more, it is now closed in 10 to 20 seconds. And this by going back as much information as before, if not more.</description>
    <copyright>Damien PONNELLE</copyright>
	<packageSourceUrl>https://github.com/bibimagic/Damien-PONNELLE-dipiscan/tree/main/Dipiscan.2.7.4</packageSourceUrl>
	<releaseNotes>https://www.dipisoft.com/articles.php?pg=2116</releaseNotes>
	<docsUrl>https://www.dipisoft.com/articles.php?pg=2116</docsUrl>
	<mailingListUrl>https://www.dipisoft.com/articles.php?pg=2116</mailingListUrl>
	<bugTrackerUrl>https://www.dipisoft.com/articles.php?pg=2116</bugTrackerUrl>
	<tags>scan network ip mac user wmi snmp ping nbtstat arp nslookup</tags>
	<dependencies>
      <dependency id="DotNet4.5.2" version="4.5.2.20140902" />
    </dependencies>
  </metadata>
</package>
